{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, JSXElementConstructor, memo, ReactElement, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useSignal } from '@dmytromykhailiuk/reactive-react';\nimport { Signal } from '@dmytromykhailiuk/reactive';\nimport {\n  useForm,\n  useFieldArray,\n  FormProvider,\n  Controller,\n  UseFormReturn,\n  ControllerRenderProps, UseFieldArrayRemove,\n} from 'react-hook-form';\n\nexport interface Dictionary<T> {\n  [key: string]: T;\n}\n\ninterface CreateDynamicViewsInput {\n  types?: Dictionary<TypeComponent>;\n  validators?: Dictionary<ValidatorFunction>;\n  asyncValidators?: Dictionary<AsyncValidatorFunction>;\n  extensions?: Dictionary<ExtensionFunction>;\n}\n\ninterface DynamicViewsComponentInput {\n  views: View[];\n  onSubmit?: (_: Dictionary<any>) => void;\n  model?: Signal<Dictionary<any>>;\n  sharedData?: Signal<Dictionary<any>>;\n}\n\ninterface BasicView {\n  type?: string;\n  hide?: boolean;\n  props?: {\n    [key: string]: any;\n  };\n  expressions?: {\n    [key: string]: string;\n  };\n  extensions?: Array<string>;\n}\n\ninterface FieldView<T = any> extends BasicView {\n  name: string;\n  defaultValue?: T;\n  resetValue?: T;\n  resetOnHide?: boolean;\n  rules?: {\n    [key: string]: any;\n  };\n  validators?: Array<string>;\n  asyncValidators?: Array<string>;\n}\n\ninterface WithChildren {\n  children: Array<View>;\n}\n\ninterface WithRepeatedView {\n  repeatedView: View;\n}\n\ninterface Default {}\n\nexport type View<T = any> = (BasicView | FieldView<T>) & (WithChildren | WithRepeatedView | Default);\n\ntype ViewWithFieldPath<T = any> = View<T> & { fieldPath: string };\n\ntype MemorizedElement = ReactElement<any, string | JSXElementConstructor<any>> | null;\n\nexport interface BasicTypeComponentInput {\n  children?: JSX.Element | MemorizedElement;\n  name: string;\n  view: any;\n  form: UseFormReturn<{}, any, undefined>;\n  sharedData: Signal<Dictionary<any>>;\n  model: Signal<Dictionary<any>>;\n  submit: () => Promise<void>;\n}\n\nexport type BasicTypeComponent = (input: BasicTypeComponentInput) => JSX.Element | MemorizedElement;\n\nexport interface FieldTypeComponentInput extends BasicTypeComponentInput {\n  field: ControllerRenderProps<{}, never>\n}\n\nexport type FieldTypeComponent = (input: FieldTypeComponentInput) => JSX.Element | MemorizedElement;\n\nexport interface TypeComponentWithRepeatedViewInput<T = any> extends BasicTypeComponentInput {\n  dataArray: Record<'id', string>[];\n  append: (value: T) => void;\n  remove: UseFieldArrayRemove;\n  renderRepeatedViewByIndex: (index: number) => JSX.Element | MemorizedElement;\n}\n\nexport type TypeComponentWithRepeatedView = (input: TypeComponentWithRepeatedViewInput) => JSX.Element | MemorizedElement;\n\nexport type TypeComponent = TypeComponentWithRepeatedView | FieldTypeComponent | BasicTypeComponent;\n\nexport interface ValidatorFunctionInput<T = any> {\n  name: string;\n  validator: string;\n  value: T;\n  view: ViewWithFieldPath;\n  setError: (message: string) => void;\n  sharedData: Dictionary<any>,\n  model: Dictionary<any>,\n}\n\nexport type ValidatorFunction = (input: ValidatorFunctionInput) => string | boolean;\n\nexport type AsyncValidatorFunction = (input: ValidatorFunctionInput) => Promise<string | boolean>;\n\nexport interface ExtensionFunctionInput {\n  currentView: ViewWithFieldPath,\n  updateCurrentView: (input: ViewWithFieldPath | ((prevView: ViewWithFieldPath) => ViewWithFieldPath)) => void\n}\n\nexport type ExtensionFunction = (input: ExtensionFunctionInput) => void;\n\nexport interface ContextValue {\n  model: Signal<Dictionary<any>>;\n  form: UseFormReturn<{}, any, undefined>;\n  sharedData: Signal<Dictionary<any>>;\n  submit: () => Promise<void>;\n  TYPES: Dictionary<TypeComponent>;\n  VALIDATORS: Dictionary<ValidatorFunction>;\n  ASYNC_VALIDATORS: Dictionary<AsyncValidatorFunction>;\n  EXTENSIONS: Dictionary<ExtensionFunction>\n}\n\nexport interface DefinitionItem<T> {\n  name: string;\n  item: T;\n}\n\nconst updateNameWithNestedValue = (name: number | string | undefined, nestedValue = ''): string => {\n  switch (true) {\n    case !nestedValue && !!name: {\n      return typeof name === 'number' ? `[${name}]` : name;\n    }\n    case !!nestedValue && !!name: {\n      return nestedValue + (typeof name === 'number' ? `[${name}]` : `.${name}`);\n    }\n    case !!nestedValue && !name: {\n      return nestedValue;\n    }\n    default: {\n      return '';\n    }\n  }\n};\n\nconst getValueByPath = ({ path, object }) => {\n  const {} = { path, object };\n\n  try {\n    const value = eval(`(${JSON.stringify(object)}).${path}`);\n\n    return value;\n  } catch {\n    return undefined;\n  }\n};\n\nconst checkIfExist = ({ path, object }) => {\n  const {} = { path, object };\n\n  try {\n    const isExist = Boolean(eval(`(${JSON.stringify(object)}).${path}`));\n\n    return isExist;\n  } catch {\n    return false;\n  }\n};\n\nconst updateObjectWithNewValueByPath = ({ path, object, value }) => {\n  const {} = { path, object };\n\n  try {\n    const newObject = eval(`(() => {\n      const object = ${JSON.stringify(object)};\n\n      object.${path} = ${JSON.stringify(value)};\n\n      return object;\n    })()`);\n\n    return newObject;\n  } catch (e) {\n    return object;\n  }\n};\n\nconst getAllRootFieldsFromChildren = (children, fields = []) => {\n  return children.reduce((acc, view) => {\n    if (view.name) {\n      acc.push(view);\n      return acc;\n    }\n    if (view.children) {\n      view.children.forEach(() => getAllRootFieldsFromChildren(view.children, acc));\n    }\n    return acc;\n  }, fields);\n};\n\nconst getDefaultValuesForView = (view) => {\n  if (view.defaultValue) {\n    return view.defaultValue;\n  }\n  if (view.resetValue) {\n    return view.resetValue;\n  }\n  if (view.repeatedView) {\n    return [];\n  }\n  if (!view.children) {\n    return '';\n  }\n  return getAllRootFieldsFromChildren(view.children).reduce(\n    (acc, view) => ({ ...acc, [view.name]: getDefaultValuesForView(view) }),\n    {},\n  );\n};\n\nconst checkIfEqualByPath = ({ path, object1, object2 }) => {\n  const {} = { path, object1, object2 };\n\n  try {\n    const isEqual = eval(\n      `JSON.stringify((${JSON.stringify(object1)}).${path}) === JSON.stringify((${JSON.stringify(object2)}).${path})`,\n    );\n\n    return isEqual;\n  } catch {\n    return false;\n  }\n};\n\nconst setupCurrentView = (view, fieldPath): ViewWithFieldPath => ({\n  hide: false,\n  ...view,\n  fieldPath,\n});\n\nconst runExpression = (expression, model, sharedData, currentView) => {\n  const {} = { model, sharedData, currentView };\n  return eval(expression);\n};\n\nconst updateObjectByPath = (object, path, newValue, mainObject = object) => {\n  if (path.length === 1) {\n    object[path[0]] = newValue;\n\n    return mainObject;\n  }\n  return updateObjectByPath(object[path[0]], path.slice(1), newValue, mainObject);\n};\n\nconst DynamicViewsContext = createContext<ContextValue>(null);\n\nexport const useDynamicViews = () => useContext(DynamicViewsContext);\n\nexport const FieldResolver = memo<{ view: View; name: string }>(({ view, name }) => {\n  const [currentView, updateCurrentView] = useState(setupCurrentView(view, name));\n\n  const { form, sharedData, model, submit, TYPES, VALIDATORS, ASYNC_VALIDATORS, EXTENSIONS } = useDynamicViews();\n\n  const expressionsCallback = useCallback(() => {\n    const modelValue = model.value;\n    const sharedDataValue = sharedData.value;\n\n    const newView = Object.entries(currentView.expressions || {}).reduce((object, [path, expression]) => {\n      const newValue = runExpression(expression, modelValue, sharedDataValue, currentView);\n\n      return updateObjectByPath(object, path.split('.'), newValue);\n    }, JSON.parse(JSON.stringify(currentView)));\n\n    if (newView !== currentView && JSON.stringify(newView) !== JSON.stringify(currentView)) {\n      updateCurrentView(newView);\n    }\n  }, [sharedData, model, currentView, updateCurrentView]);\n\n  useMemo(expressionsCallback, []);\n\n  useMemo(() => {\n    (currentView.extensions || []).forEach((extension) => {\n      if (!EXTENSIONS[extension]) {\n        throw new Error(`Extension ${extension} was not defined!`);\n      }\n      EXTENSIONS[extension]({ currentView, updateCurrentView });\n    });\n  }, []);\n\n  useEffect(\n    () => model.subscribe(expressionsCallback),\n    [sharedData, model, currentView, updateCurrentView, expressionsCallback],\n  );\n\n  useEffect(\n    () => sharedData.subscribe(expressionsCallback),\n    [sharedData, model, currentView, updateCurrentView, expressionsCallback],\n  );\n\n  useEffect(() => {\n    if (currentView.hide && (currentView as FieldView)?.resetOnHide && (currentView as FieldView)?.resetValue !== form.getValues(name as never)) {\n      setTimeout(() => form.setValue(name as never, ((currentView as FieldView).resetValue ?? '') as never));\n    }\n  }, [currentView, form, name]);\n\n  useEffect(() => {\n    if (!(currentView as FieldView).defaultValue && !checkIfExist({ path: name, object: model.value })) {\n      return;\n    }\n    const newModel = updateObjectWithNewValueByPath({\n      path: name,\n      object: model.value,\n      value: getValueByPath({ path: name, object: model.value }) || (currentView as FieldView).defaultValue,\n    });\n\n    model.value = newModel;\n    model.trigger();\n  }, [form, model, name, (currentView as FieldView).defaultValue, expressionsCallback]);\n\n  useEffect(() => {\n    const sub = form.watch((value, { name: fieldName, type }) => {\n      if (fieldName !== name || type !== 'change') {\n        return;\n      }\n      if (\n        !checkIfEqualByPath({\n          path: name,\n          object1: model.value,\n          object2: value,\n        })\n      ) {\n        model.value = value;\n      }\n    });\n\n    return () => sub.unsubscribe();\n  }, [form, model, name]);\n\n  const rules = useMemo(\n    () => ({\n      ...((currentView as FieldView).rules || {}),\n      validate: {\n        ...((currentView as FieldView).validators || []).reduce(\n          (acc, key) =>\n            !VALIDATORS[key]\n              ? acc\n              : {\n                  ...acc,\n                  [key]: (value) =>\n                    VALIDATORS[key]({\n                      name,\n                      validator: key,\n                      value,\n                      view: currentView,\n                      setError: (message = '') => {\n                        if (!form.formState.errors[name]) {\n                          form.setError(name as any, { type: key, message });\n                        }\n                      },\n                      sharedData: sharedData.value,\n                      model: model.value,\n                    }),\n                },\n          {},\n        ),\n        ...((currentView as FieldView).asyncValidators || []).reduce(\n          (acc, key) =>\n            !ASYNC_VALIDATORS[key]\n              ? acc\n              : {\n                  ...acc,\n                  [key]: (value) =>\n                    ASYNC_VALIDATORS[key]({\n                      name,\n                      validator: key,\n                      value,\n                      view: currentView,\n                      setError: (message = '') => {\n                        if (!form.formState.errors[name]) {\n                          form.setError(name as any, { type: key, message });\n                        }\n                      },\n                      sharedData: sharedData.value,\n                      model: model.value,\n                    }),\n                },\n          {},\n        ),\n      },\n    }),\n    [(currentView as FieldView).rules, (currentView as FieldView).validators, (currentView as FieldView).asyncValidators],\n  );\n\n  if (currentView.hide) {\n    return null;\n  }\n\n  switch (true) {\n    case Boolean((currentView as WithChildren).children): {\n      const content = <NestedForm name={name} views={(currentView as WithChildren).children} />;\n\n      if (!currentView.type) {\n        return content;\n      }\n\n      const DynamicComponent = TYPES[currentView.type] as BasicTypeComponent;\n\n      if (!DynamicComponent) {\n        throw new Error(`Type ${currentView.type} was not defined!`);\n      }\n\n      return (\n        <DynamicComponent\n          name={name}\n          view={currentView}\n          form={form}\n          sharedData={sharedData}\n          model={model}\n          submit={submit}\n        >\n          {content}\n        </DynamicComponent>\n      );\n    }\n    case Boolean((currentView as WithRepeatedView).repeatedView): {\n      return <RepeatedView name={name} view={currentView} />;\n    }\n    case Boolean(currentView.type): {\n      const DynamicComponent = TYPES[currentView.type] as BasicTypeComponent;\n\n      if (!DynamicComponent) {\n        throw new Error(`Type ${currentView.type} was not defined!`);\n      }\n\n      if (!(currentView as FieldView).name) {\n        return (\n          <DynamicComponent\n            name={name}\n            view={currentView}\n            form={form}\n            sharedData={sharedData}\n            model={model}\n            submit={submit}\n          />\n        );\n      }\n\n      const FieldDynamicComponent: FieldTypeComponent = DynamicComponent;\n\n      return (\n        <Controller\n          name={name as never}\n          control={form.control}\n          defaultValue={(currentView as FieldView).defaultValue as never}\n          rules={rules}\n          render={({ field }) => {\n            console.log(name + ' render');\n\n            return (\n              <FieldDynamicComponent\n                name={name}\n                view={currentView}\n                field={field}\n                form={form}\n                sharedData={sharedData}\n                model={model}\n                submit={submit}\n              />\n            );\n          }}\n        />\n      );\n    }\n    default: {\n      throw new Error(`Invalid view structure! ${JSON.stringify(currentView)}`);\n    }\n  }\n});\n\nexport const RepeatedView = memo<{ view: View; name: string }>(({ name, view }) => {\n  const { form, sharedData, model, submit, TYPES } = useDynamicViews();\n\n  const {\n    fields: dataArray,\n    append,\n    remove,\n  } = useFieldArray({\n    control: form.control,\n    name: name as never,\n  });\n\n  const updatedAppend = useCallback(\n    (value) => append(value ?? getDefaultValuesForView((view as WithRepeatedView).repeatedView)),\n    [append, view],\n  );\n\n  useEffect(() => {\n    const modelValues = model.value;\n    const formValues = form.getValues();\n\n    if (\n      !checkIfEqualByPath({\n        path: name,\n        object1: modelValues,\n        object2: formValues,\n      })\n    ) {\n      model.value = formValues;\n    }\n  }, [form, model, dataArray, name]);\n\n  const content = (\n    <>\n      {(dataArray || []).map((_, id) => (\n        <FieldResolver key={id} name={updateNameWithNestedValue(String(id), name)} view={(view as WithRepeatedView).repeatedView} />\n      ))}\n    </>\n  );\n\n  if (!view.type) {\n    return content;\n  }\n\n  const DynamicComponent = TYPES[view.type] as TypeComponentWithRepeatedView;\n\n  if (!DynamicComponent) {\n    throw new Error(`Type ${view.type} was not defined!`);\n  }\n\n  return (\n    <DynamicComponent\n      dataArray={dataArray}\n      name={name}\n      view={view}\n      append={updatedAppend}\n      remove={remove}\n      renderRepeatedViewByIndex={(index: number) => <FieldResolver\n        name={updateNameWithNestedValue(String(index), name)}\n        view={(view as WithRepeatedView).repeatedView}\n      />}\n      form={form}\n      sharedData={sharedData}\n      model={model}\n      submit={submit}\n    >\n      {content}\n    </DynamicComponent>\n  );\n});\n\nexport const NestedForm = memo<{ views: View[]; name: string }>(({ views, name }) => {\n  return (\n    <>\n      {views.map((view, id) => (\n        <FieldResolver key={`${id}-${view.type}-${(view as FieldView).name}`} name={updateNameWithNestedValue((view as FieldView).name, name)} view={view} />\n      ))}\n    </>\n  );\n});\n\nexport const createDynamicViews = ({ types = {}, validators = {}, asyncValidators = {}, extensions = {} }: CreateDynamicViewsInput = {}) => {\n  const TYPES = types;\n  const VALIDATORS = validators;\n  const ASYNC_VALIDATORS = asyncValidators;\n  const EXTENSIONS = extensions;\n\n  const Component = ({ views, model = null, sharedData = null, onSubmit = () => {} }: DynamicViewsComponentInput) => {\n    const defaultModel = useSignal({});\n    const defaultSharedData = useSignal({});\n\n    const form = useForm({\n      defaultValues: (model || defaultModel).value,\n      mode: 'all',\n    });\n\n    const submit = useCallback(() => form.handleSubmit(onSubmit)(), [form, onSubmit]);\n\n    const updateFormWithModel = useCallback(() => {\n      const modelValue = (model || defaultModel).value;\n      const formValue = form.getValues();\n\n      if (JSON.stringify(formValue) !== JSON.stringify(modelValue)) {\n        form.reset(modelValue, {\n          keepTouched: true,\n          keepDirty: true,\n        });\n      }\n    }, [model, form, defaultModel]);\n\n    useEffect(() => {\n      if (!model) {\n        return;\n      }\n\n      updateFormWithModel();\n\n      return (model || defaultModel).subscribe(updateFormWithModel);\n    }, [model, form, defaultModel, updateFormWithModel]);\n\n    const dynamicViewsContextValue = useMemo<ContextValue>(\n      () => ({\n        model: model || defaultModel,\n        form,\n        sharedData: sharedData || defaultSharedData,\n        submit,\n        TYPES,\n        VALIDATORS,\n        ASYNC_VALIDATORS,\n        EXTENSIONS,\n      }),\n      [model, defaultModel, form, sharedData, defaultSharedData, submit],\n    );\n\n    return (\n      <FormProvider {...form}>\n        <DynamicViewsContext.Provider value={dynamicViewsContextValue}>\n          <NestedForm views={views} name={''} />\n        </DynamicViewsContext.Provider>\n      </FormProvider>\n    );\n  };\n\n  Component.defineTypes = (types: Array<DefinitionItem<TypeComponent>>) => {\n    types.forEach(({ name, item: component }) => {\n      TYPES[name] = component;\n    });\n  };\n\n  Component.defineValidators = (validators: Array<DefinitionItem<ValidatorFunction>>) => {\n    validators.forEach(({ name, item: validator }) => {\n      VALIDATORS[name] = validator;\n    });\n  };\n\n  Component.defineAsyncValidators = (validators: Array<DefinitionItem<AsyncValidatorFunction>>) => {\n    validators.forEach(({ name, item: asyncValidator }) => {\n      ASYNC_VALIDATORS[name] = asyncValidator;\n    });\n  };\n\n  Component.defineExtensions = (extensions: Array<DefinitionItem<ExtensionFunction>>) => {\n    extensions.forEach(({ name, item: extension }) => {\n      EXTENSIONS[name] = extension;\n    });\n  };\n\n  return Component;\n};\n"]}